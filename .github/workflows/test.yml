name: test

on:
  workflow_dispatch:
    inputs:
      tf_apply:
        description: run terraform apply
        default: 'false'
  push:
    paths:
      - '.github/workflows/test.yml'
      - 'dev/us-east-1/**'
      - 'modules/**'
      - 'lambda/**'

      
permissions:
  contents: read

jobs:
  Terraform:
    runs-on: [self-hosted]

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

       # Python setup for runner
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::214408080534:role/ec2-ssm-role
          aws-region: us-east-1    

       # Clean old zips
      - name: Clean old ZIP files
        run: |
          echo "Removing old ZIP files from previous runs..."
          find lambda/lambda_layer -type f -name "*.zip" -delete  
  
      # Build Lambda Layer
      - name: Build Lambda Layer
        run: |
          chmod +x ./build_layer.sh
          ./build_layer.sh  

      # Verify layer.zip exists
      - name: Verify layer.zip
        run: |
          if [ ! -f "lambda/lambda_layer/layer.zip" ]; then
            echo "layer.zip not found!"
            ls -R lambda/lambda_layer
            exit 1
          else
            echo "layer.zip created successfully."
            ls -lh lambda/lambda_layer/layer.zip
          fi

      # Upload layer.zip to S3
      - name: Upload Lambda Layer to S3
        run: |
          BUCKET_NAME="dev-test-bucket-43"
          LAYER_KEY="lambda/lambda_layer/layer.zip"

          echo "Uploading Lambda Layer ZIP to s3://$BUCKET_NAME/$LAYER_KEY ..."
          aws s3 cp lambda/lambda_layer/layer.zip s3://$BUCKET_NAME/$LAYER_KEY

          # Export the key for Terraform
          echo "LAYER_KEY=$LAYER_KEY" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.12  

      - name: Terraform Format
        run: terraform fmt -recursive -check -diff -write=false .

      - name: Terraform Init
        run: |
          cd dev/us-east-1 && terraform init

      - name: Terraform Plan
        run: cd dev/us-east-1 && terraform plan -input=false -var="lambda_layer_s3_key=${{ env.LAYER_KEY }}"
      # tf apply
      - name: Terraform Apply
        if: ((github.ref == 'refs/heads/main' && github.event_name == 'push')||(github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' && github.event.inputs.tf_apply == 'true'))
        run: cd dev/us-east-1 && terraform apply -auto-approve -input=false -var="lambda_layer_s3_key=${{ env.LAYER_KEY }}"

  
          

